alias clean_branches="git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -d"
alias addspacer="defaults write com.apple.dock persistent-apps -array-add '{tile-data={}; tile-type=\"spacer-tile\";}' && killall Dock"
devrepo() { 
  cd ~/Projects/ifit/$1
	code . 
}

openrepo() { 
	cd ~/Projects/ifit/$1 
}

review() {
  openrepo $1
	git fetch 
  git checkout $2
	git pull
	code .
}

alias connectVPN="osascript -e 'tell application \"Tunnelblick\"' -e '  get name of first configuration' -e '  connect result' -e '  repeat until result = \"CONNECTED\"' -e '    delay 1' -e '    get state of first configuration' -e '  end repeat' -e 'end tell'"

alias disconnectVPN="osascript -e 'tell application \"Tunnelblick\"' -e '  get name of first configuration' -e '  disconnect result' -e '  repeat until result = \"EXITING\"' -e '    delay 1' -e '    get state of first configuration' -e '  end repeat' -e 'end tell'"

pulltestdata() {
  connectVPN
	mongodump --host galactica.ifit-dev.com --port 60000 --ssl --sslCAFile ~/.ssh/mongodb.ca.cert.pem --sslPEMKeyFile ~/.ssh/mongodb.viper-user.key-and-cert.pem --out=/Volumes/Storage/DB_backup/test
	disconnectVPN
}

alias restoretestdata="mongorestore --drop --noIndexRestore /Volumes/Storage/DB_backup/test"

pullviperdata() {
	connectVPN
  mongodump --host galactica.ifit-dev.com --port $1 --ssl --sslCAFile ~/.ssh/mongodb.ca.cert.pem --sslPEMKeyFile ~/.ssh/mongodb.viper-user.key-and-cert.pem --out=/Volumes/Storage/DB_backup/viper
	disconnectVPN
}

alias restoreviperdata="mongorestore --drop --noIndexRestore /Volumes/Storage/DB_backup/viper"


